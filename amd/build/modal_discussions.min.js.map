{"version":3,"sources":["../src/modal_discussions.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","registered","SELECTORS","LOGIN_BUTTON","ModalLogin","root","call","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","bind","register"],"mappings":"AAAAA,OAAM,0CAAC,CAAC,QAAD,CAAW,mBAAX,CAAgC,gCAAhC,CAAkE,YAAlE,CAAgF,qBAAhF,CAAD,CACE,SAASC,CAAT,CAAYC,CAAZ,CAA0BC,CAA1B,CAAwCC,CAAxC,CAA+CC,CAA/C,CAA8D,IAE9DC,CAAAA,CAAU,GAFoD,CAG9DC,CAAS,CAAG,CACZC,YAAY,CAAE,yBADF,CAHkD,CAY9DC,CAAU,CAAG,SAASC,CAAT,CAAe,CAC5BN,CAAK,CAACO,IAAN,CAAW,IAAX,CAAiBD,CAAjB,EAEA,GAAI,CAAC,KAAKE,SAAL,GAAiBC,IAAjB,CAAsBN,CAAS,CAACC,YAAhC,EAA8CM,MAAnD,CAA2D,CACvDZ,CAAY,CAACa,SAAb,CAAuB,CAACC,OAAO,CAAE,uBAAV,CAAvB,CACH,CAEJ,CAnBiE,CAqBlEP,CAAU,CAACQ,IAAX,CAAkB,mBAAlB,CACAR,CAAU,CAACS,SAAX,CAAuBC,MAAM,CAACC,MAAP,CAAchB,CAAK,CAACc,SAApB,CAAvB,CACAT,CAAU,CAACS,SAAX,CAAqBG,WAArB,CAAmCZ,CAAnC,CAOAA,CAAU,CAACS,SAAX,CAAqBI,sBAArB,CAA8C,UAAW,CAErDlB,CAAK,CAACc,SAAN,CAAgBI,sBAAhB,CAAuCX,IAAvC,CAA4C,IAA5C,EAEA,KAAKY,QAAL,GAAgBC,EAAhB,CAAmBrB,CAAY,CAACsB,MAAb,CAAoBC,QAAvC,CAAiDnB,CAAS,CAACC,YAA3D,CAAyE,UAAkB,CAG1F,CAHwE,CAGvEmB,IAHuE,CAGlE,IAHkE,CAAzE,CAKH,CATD,CAaA,GAAI,CAACrB,CAAL,CAAiB,CACbD,CAAa,CAACuB,QAAd,CAAuBnB,CAAU,CAACQ,IAAlC,CAAwCR,CAAxC,CAAoD,sCAApD,EACAH,CAAU,GACb,CAED,MAAOG,CAAAA,CACV,CAlDK,CAAN","sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry'],\n        function($, Notification, CustomEvents, Modal, ModalRegistry) {\n\n    var registered = false;\n    var SELECTORS = {\n        LOGIN_BUTTON: '[data-action=\"login\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalLogin = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.LOGIN_BUTTON).length) {\n            Notification.exception({message: 'No login button found'});\n        }\n\n    };\n\n    ModalLogin.TYPE = 'your_module-login';\n    ModalLogin.prototype = Object.create(Modal.prototype);\n    ModalLogin.prototype.constructor = ModalLogin;\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalLogin.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.LOGIN_BUTTON, function(e, data) {\n            // Add your logic for when the login button is clicked. This could include the form validation,\n            // loading animations, error handling etc.\n        }.bind(this));\n\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalLogin.TYPE, ModalLogin, 'local_repositoryciae/discussionsform');\n        registered = true;\n    }\n\n    return ModalLogin;\n});"],"file":"modal_discussions.min.js"}
{"version":3,"sources":["../src/modal_collab.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","NewCollab","selector","contextid","console","log","discussionid","init","prototype","modal","triggers","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","setLarge","getRoot","on","hidden","setBody","shown","append","save","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","e","preventDefault","sel","document","getElementById","selectedId","options","selectedIndex","value","selectedName","text","innerHTML","selFile","selectedFileId","selectedFileName","hide","attr"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     core_group/newgroup\n * @class      NewGroup\n * @package    core_group\n * @copyright  2017 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\nfunction($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n/**\n* Constructor\n*\n* @param {String} selector used to find triggers for the new group modal.\n* @param {int} contextid\n*\n* Each call to init gets it's own instance of this class.\n*/\nvar NewCollab = function(selector, contextid) {\n    this.contextid = contextid;\n    console.log(selector);\n    this.discussionid = 0;\n    this.init(selector);\n};\n\n/**\n* @var {Modal} modal\n* @private\n*/\nNewCollab.prototype.modal = null;\n\n/**\n* @var {int} contextid\n* @private\n*/\nNewCollab.prototype.contextid = -1;\n\n/**\n* Initialise the class.\n*\n* @param {String} selector used to find triggers for the new group modal.\n* @private\n* @return {Promise}\n*/\nNewCollab.prototype.init = function(selector) {\n    var triggers = $(selector);\n    // Fetch the title string.\n    return Str.get_string('sharedmaterials', 'local_repositoryciae').then(function(title) {\n         // Create the modal.\n        return ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: this.getBody()\n        }, triggers);\n    }.bind(this)).then(function(modal) {\n        // Keep a reference to the modal.\n        this.modal = modal;\n\n        // Forms are big, we want a big modal.\n        this.modal.setLarge();\n\n        // We want to reset the form every time it is opened.\n        this.modal.getRoot().on(ModalEvents.hidden, function() {\n            this.modal.setBody(this.getBody());\n        }.bind(this));\n\n        // We want to hide the submit buttons every time it is opened.\n        this.modal.getRoot().on(ModalEvents.shown, function() {\n            this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n        }.bind(this));\n\n\n        // We catch the modal save event, and use it to submit the form inside the modal.\n        // Triggering a form submission will give JS validation scripts a chance to check for errors.\n        this.modal.getRoot().on(ModalEvents.save, this.submitFormAjax.bind(this));\n        // We also catch the form submit event and use it to submit the form with ajax.\n        //this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n        return this.modal;\n    }.bind(this));\n};\n\n/**\n* @method getBody\n* @private\n* @return {Promise}\n*/\nNewCollab.prototype.getBody = function(formdata) {\n    if (typeof formdata === \"undefined\") {\n        formdata = {};\n    }\n    // Get the content of the modal.\n    var params = {jsonformdata: JSON.stringify(formdata)};\n    console.log(params);\n    return Fragment.loadFragment('local_repositoryciae', 'new_discussions_form', this.contextid, params);\n};\n\n/**\n* Private method\n*\n* @method submitFormAjax\n* @private\n* @param {Event} e Form submission event.\n*/\nNewCollab.prototype.submitFormAjax = function(e) {\n    // We don't want to do a real form submission.\n    e.preventDefault();\n\n    var sel = document.getElementById('id_discussions');\n    var selectedId = sel.options[sel.selectedIndex].value;\n    var selectedName = sel.options[sel.selectedIndex].text;\n    document.getElementById('id_conversation').value = selectedId;\n    document.getElementById('id_selected_conversation').innerHTML = selectedName;\n\n    var selFile = document.getElementById('id_discussionfile');\n    var selectedFileId = selFile.options[selFile.selectedIndex].value;\n    var selectedFileName = selFile.options[selFile.selectedIndex].text;\n    document.getElementById('id_link').value = selectedFileId;\n    document.getElementById('id_selected_file').innerHTML = \" / \"+selectedFileName;\n\n    this.modal.hide();\n    $('[data-fieldtype=submit]').attr('style', 'display: block !important');\n};\n\n    return /** @alias module:core_group/newgroup */ {\n    // Public variables and functions.\n    /**\n     * Attach event listeners to initialise this module.\n     *\n     * @method init\n     * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n     * @param {int} contextid The contextid for the course.\n     * @return {Promise}\n     */\n        init: function(selector, contextid) {\n            return new NewCollab(selector, contextid);\n        }\n    };\n});\n"],"file":"modal_collab.min.js"}